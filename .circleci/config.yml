version: 2.1
jobs:
  build:
    working_directory: ./src
    docker:
      - image: cimg/php:8.1-node
      - image: mysql:8.0.35
        environment:
          MYSQL_ROOT_PASSWORD: root  # MySQLのrootパスワード
          MYSQL_DATABASE: demo_test    # テスト用のデータベース名
    environment:
      - DB_HOST: 127.0.0.1
      # - image: circleci/postgres:11.6-alpine
      #   environment:
      #     POSTGRES_DB: larasns
      #     POSTGRES_USER: default
      #     POSTGRES_PASSWORD: secret
    # environment:
    #   APP_ENV: testing
    #   DB_CONNECTION: pgsql
    #   DB_HOST: postgres
    #   DB_PORT: 5432
    #   DB_DATABASE: larasns
    #   DB_USERNAME: default
    #   DB_PASSWORD: secret
    steps:
      - checkout
      - run: sudo composer self-update --2
      - restore_cache:
          key: composer-v2-{{ checksum "./src/composer.lock" }}
      - run:
          command: composer install -n --prefer-dist
          working_directory: ./src
      - save_cache:
          key: composer-v2-{{ checksum "./src/composer.lock" }}
          paths:
            - vendor
      - run: ls
      - restore_cache:
          key: npm-v2-{{ checksum "./src/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
          working_directory: ./src
      - save_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: npm run dev
          working_directory: ./src
      - run: sudo apt update
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo composer self-update
      - run: php ./src/artisan --env=testing
      - run: php ./src/vendor/bin/phpunit --configuration=./src/hogehuga/phpunit.xml

      # - run:
      #     name: get ready for postgres
      #     command: |
      #       sudo apt-get update
      #       sudo apt-get install libpq-dev
      #       sudo docker-php-ext-install pdo_pgsql
      #       dockerize -wait tcp://localhost:5432 -timeout 1m
      # - run:
      #     name: Wait for MySQL to be ready
      #     command: |
      #       for i in `seq 1 60`; do
      #         nc -z mysql 3306 && echo Success && exit 0
      #         echo -n .
      #         sleep 2
      #       done
      #       echo "MySQL failed to start" && exit 1
      # - run:
      #     name: php test
      #     command: |
      #       php artisan migrate --env=testing  # テスト用データベースのマイグレーション
      #       vendor/bin/phpunit
      #     working_directory: ./src
      #     timeout: 20m